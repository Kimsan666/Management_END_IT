// Improved Prisma Schema for Inventory Management System

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id               Int         @id @default(autoincrement())
  firstName        String?
  lastName         String?
  email            String      @unique
  village          String?
  city             String?
  province         String?
  position         String?
  dateOfBirth      DateTime?
  dateOfEmployment DateTime    @default(now())
  isActive         Boolean     @default(true)
  user             User?
  images           Image[]
  phoneNumber      PhoneNumber @relation(fields: [phoneNumberId], references: [id])
  phoneNumberId    Int
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String
  role       String    @default("user")
  enabled    Boolean   @default(true)
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int?      @unique
  orders     Order[]
  carts      Cart[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Product {
  id             Int                 @id @default(autoincrement())
  qrCode         String              @unique
  name           String              @unique
  description    String?
  images         Image[]
  warehouseStock WarehouseStock[]
  purchaseOrders PurchaseOrderItem[]
  supplier       Supplier?           @relation(fields: [supplierId], references: [id])
  supplierId     Int?
  orderItems     OrderItem[]
  cartItems      CartItem[]
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  category       Category            @relation(fields: [categoryIdCt], references: [idCt])
  categoryIdCt   Int
  unit           Unit                @relation(fields: [unitIdUt], references: [idUt])
  unitIdUt       Int
}

model Warehouse {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  location  String
  contact   String?
  stocks    WarehouseStock[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model WarehouseStock {
  id               Int       @id @default(autoincrement())
  warehouse        Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId      Int
  product          Product   @relation(fields: [productId], references: [id])
  productId        Int
  totalQuantity    Int       @default(0)
  reservedQuantity Int       @default(0)
  minimumStock     Int       @default(0)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Supplier {
  id             Int             @id @default(autoincrement())
  name           String
  contactName    String?
  email          String          @unique
  phone          String          @unique
  address        String
  products       Product[]
  purchaseOrders PurchaseOrder[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model PurchaseOrder {
  id                   Int                 @id @default(autoincrement())
  supplier             Supplier            @relation(fields: [supplierId], references: [id])
  supplierId           Int
  status               String              @default("PENDING")
  totalAmount          Decimal             @db.Decimal(10, 2)
  items                PurchaseOrderItem[]
  orderDate            DateTime            @default(now())
  expectedDeliveryDate DateTime?
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
}

model PurchaseOrderItem {
  id              Int           @id @default(autoincrement())
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])
  purchaseOrderId Int
  product         Product       @relation(fields: [productId], references: [id])
  productId       Int
  quantity        Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  items     CartItem[]
  status    String     @default("ACTIVE")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         Int         @id @default(autoincrement())
  nameCtm    String
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  items      OrderItem[]
  nameDriver String?
  carRegis   String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id         Int       @id @default(autoincrement())
  idasset    String
  idpublic   String
  url        String
  SecureUrl  String
  employee   Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int?
  product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Category {
  idCt      Int       @id @default(autoincrement())
  nameCt    String    @unique
  products  Product[]
  createdDT DateTime  @default(now())
  updatedDT DateTime  @updatedAt
}

model Unit {
  idUt      Int       @id @default(autoincrement())
  nameUt    String    @unique
  products  Product[]
  createdDT DateTime  @default(now())
  updatedDT DateTime  @updatedAt
}

model PhoneNumber {
  id       Int        @id @default(autoincrement())
  employee Employee[]
  number   String     @unique
}
